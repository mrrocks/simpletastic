
//  ★ SETTINGS

    $default-gutter-width: 2% !default;


//  ★ SILENT CLASSES

//  Extend this class to any container for columns.

    %row { letter-spacing: -0.31em; }


//  ★ FUNCTIONS


//  This function calculates the size (width + gutter) of one column based on the choosen fractions.

    @function calculate-column-width($selected-columns, $all-columns, $gutter-width) {

        $available-space: 100%;
        $all-gutters-width: $gutter-width * ($all-columns - 1);
        $column-width: (($available-space - $all-gutters-width) / $all-columns) * $selected-columns;

        @if $selected-columns == 1 {
            @return $column-width;
        }

        @return $column-width + $gutter-width * ($selected-columns - 1);
    }


//  ★ MIXINS


//  This mixin set all the layout style for a column.
//  Remember that it works with fractions, like one third, or two fourths, etc. Any combination is possible.
//
//  Example:
//
//  @include column(1, 6);      ⟵ Set the size of the column of one sixth of the available space


    @mixin column($selected-columns, $all-columns, $gutter-width: $default-gutter-width) {
        display: inline-block;
        margin-right: $gutter-width;
        width: calculate-column-width($selected-columns, $all-columns, $gutter-width);
        letter-spacing: normal;

        &:last-of-type { margin-right: 0; }
    }


//  Add this mixin along with the "column" one to get automatic rows - It removes the gutter each N columns.
//
//  Example:
//
//  @include column(1, 6);      ⟵ Set the size of the column of one sixth of the available space
//  @include grid(6);           ⟵ Removes gutter each 6 columns


    @mixin grid($column-number) {
        &:nth-of-type(#{$column-number}n) { margin-right: 0; }
    }





// @mixin nested($selected-columns, $all-columns) {
//     margin-right: $gutter-width;
// }